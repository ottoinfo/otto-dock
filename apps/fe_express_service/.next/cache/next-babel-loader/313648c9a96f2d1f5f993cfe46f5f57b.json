{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime-corejs2/helpers/esm/get\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/data/src/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport Head from \"next/head\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(_default, _App);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.state = {\n      hasError: false,\n      errorEventId: null,\n      statusCode: null\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      this.setState({\n        errorEventId: errorEventId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          hasError = _this$state.hasError,\n          errorEventId = _this$state.errorEventId,\n          statusCode = _this$state.statusCode;\n\n      if (!hasError) {\n        // Render the normal Next.js page\n        return _get(_getPrototypeOf(_default.prototype), \"render\", this).call(this);\n      } // Render Custom Error Page\n      // to leverage the existing ERROR App we have to create a REDUX Store\n      // and used outside of NEXT.JS Framework ( infinite loop in NEXT )\n\n\n      return __jsx(Provider, {\n        store: createStore({}),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, __jsx(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Error\")), __jsx(Theme, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(Error, {\n        message: \"Oops! An error occured on this page.\",\n        errorEventId: errorEventId,\n        statusCode: statusCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                _context.prev = 1;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 6;\n                return Component.getInitialProps(ctx);\n\n              case 6:\n                pageProps = _context.sent;\n\n              case 7:\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                return _context.abrupt(\"return\", {\n                  hasError: true,\n                  errorEventId: errorEventId,\n                  statusCode: ctx.isServer ? \"500\" : false,\n                  pageProps: {\n                    dataLayer: {\n                      pagetype: \"error\",\n                      errortype: errorEventId\n                    },\n                    props: {},\n                    store: {}\n                  }\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      // If there was an error generated within getInitialProps, and we haven't\n      // yet seen an error, we add it to this.state here\n      return {\n        hasError: props.hasError || state.hasError || false,\n        errorEventId: props.errorEventId || state.errorEventId || undefined,\n        statusCode: props.statusCode || state.statusCode || undefined\n      };\n    }\n  }, {\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError() {\n      // React Error Boundary here allows us to set state flagging the error (and\n      // later render a fallback UI).\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return _default;\n}(App);\n\nexport { _default as default };","map":{"version":3,"sources":["/data/src/pages/_app.js"],"names":["React","Fragment","App","Provider","Head","props","state","hasError","errorEventId","statusCode","error","errorInfo","setState","createStore","Component","ctx","pageProps","getInitialProps","isServer","dataLayer","pagetype","errortype","store","undefined"],"mappings":";;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;;;;;AAGE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,YAAY,EAAE,IAFH;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAFiB;AAOlB;;;;sCA8CiBC,K,EAAeC,S,EAAmB;AAClD,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAZA;AAAF,OAAd;AACD;;;6BAEQ;AAAA,wBACwC,KAAKF,KAD7C;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,YADX,eACWA,YADX;AAAA,UACyBC,UADzB,eACyBA,UADzB;;AAEP,UAAI,CAACF,QAAL,EAAe;AACb;AACA;AACD,OALM,CAMP;AACA;AACA;;;AACA,aACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEM,WAAW,CAAC,EAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAKE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD;AACE,QAAA,OAAO,EAAC,sCADV;AAEE,QAAA,YAAY,EAAEL,YAFhB;AAGE,QAAA,UAAU,EAAEC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CADF,CADF;AAiBD;;;;;;;;;;;;AA1E8BK,gBAAAA,S,QAAAA,S,EAAWC,G,QAAAA,G;;AAElCC,gBAAAA,S,GAAY,E;;qBAEZF,SAAS,CAACG,e;;;;;;uBACMH,SAAS,CAACG,eAAV,CAA0BF,GAA1B,C;;;AAAlBC,gBAAAA,S;;;iDAGK;AAAEA,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;iDAIA;AACLT,kBAAAA,QAAQ,EAAE,IADL;AAELC,kBAAAA,YAAY,EAAZA,YAFK;AAGLC,kBAAAA,UAAU,EAAEM,GAAG,CAACG,QAAJ,GAAe,KAAf,GAAuB,KAH9B;AAILF,kBAAAA,SAAS,EAAE;AACTG,oBAAAA,SAAS,EAAE;AACTC,sBAAAA,QAAQ,EAAE,OADD;AAETC,sBAAAA,SAAS,EAAEb;AAFF,qBADF;AAKTH,oBAAAA,KAAK,EAAE,EALE;AAMTiB,oBAAAA,KAAK,EAAE;AANE;AAJN,iB;;;;;;;;;;;;;;;;;;6CAgBqBjB,K,EAAcC,K,EAAc;AAC1D;AACA;AACA,aAAO;AACLC,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,IAAkBD,KAAK,CAACC,QAAxB,IAAoC,KADzC;AAELC,QAAAA,YAAY,EAAEH,KAAK,CAACG,YAAN,IAAsBF,KAAK,CAACE,YAA5B,IAA4Ce,SAFrD;AAGLd,QAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,IAAoBH,KAAK,CAACG,UAA1B,IAAwCc;AAH/C,OAAP;AAKD;;;+CAEiC;AAChC;AACA;AACA,aAAO;AAAEhB,QAAAA,QAAQ,EAAE;AAAZ,OAAP;AACD;;;;EApD0BL,G","sourcesContent":["/* @flow */\n\nimport React, { Fragment } from \"react\";\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport Head from \"next/head\";\n\nexport default class extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      errorEventId: null,\n      statusCode: null\n    };\n  }\n\n  static async getInitialProps({ Component, ctx }: Object) {\n    try {\n      let pageProps = {};\n\n      if (Component.getInitialProps) {\n        pageProps = await Component.getInitialProps(ctx);\n      }\n\n      return { pageProps };\n    } catch (error) {\n      // Capture errors that happen during a page's getInitialProps.\n      // This will work on both client and server sides.\n      return {\n        hasError: true,\n        errorEventId,\n        statusCode: ctx.isServer ? \"500\" : false,\n        pageProps: {\n          dataLayer: {\n            pagetype: \"error\",\n            errortype: errorEventId\n          },\n          props: {},\n          store: {}\n        }\n      };\n    }\n  }\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    // If there was an error generated within getInitialProps, and we haven't\n    // yet seen an error, we add it to this.state here\n    return {\n      hasError: props.hasError || state.hasError || false,\n      errorEventId: props.errorEventId || state.errorEventId || undefined,\n      statusCode: props.statusCode || state.statusCode || undefined\n    };\n  }\n\n  static getDerivedStateFromError() {\n    // React Error Boundary here allows us to set state flagging the error (and\n    // later render a fallback UI).\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Object, errorInfo: Object) {\n    this.setState({ errorEventId });\n  }\n\n  render() {\n    const { hasError, errorEventId, statusCode } = this.state;\n    if (!hasError) {\n      // Render the normal Next.js page\n      return super.render();\n    }\n    // Render Custom Error Page\n    // to leverage the existing ERROR App we have to create a REDUX Store\n    // and used outside of NEXT.JS Framework ( infinite loop in NEXT )\n    return (\n      <Provider store={createStore({})}>\n        <Fragment>\n          <Head>\n            <title>Error</title>\n          </Head>\n\n          <Theme>\n            <Error\n              message=\"Oops! An error occured on this page.\"\n              errorEventId={errorEventId}\n              statusCode={statusCode}\n            />\n          </Theme>\n        </Fragment>\n      </Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}